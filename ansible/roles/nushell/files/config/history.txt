ls
open README.md
ls -la
tmux
ssh
cd ..
exit
config nu
$env.config.buffer_editor = 'nvim'
config nu
ls
ls -l
ls -l|sort-by mode
ls -l|sort-by mode|reverse
exit
describe kubectl get pods --all-namespaces
describe get pods --all-namespaces
kubectl get pods --all-namespaces
open kubectl get pods --all-namespaces
describe kubectl get pods --all-namespaces
kubectl get pods --all-namespaces|parse
parse kubectl get pods --all-namespaces
parse $(kubectl get pods --all-namespaces)
kubectl get pods --all-namespaces|lines
kubectl get pods --all-namespaces|lines|columns
kubectl get pods --all-namespaces|lines|parse
kubectl get pods --all-namespaces|lines
kubectl get pods --all-namespaces|lines|from ssv
kubectl get pods --all-namespaces|from ssv
kubectl get pods --all-namespaces|from ssv|where name = 'wallabag'
kubectl get pods --all-namespaces|from ssv|where name == wallabag
kubectl get pods --all-namespaces|from ssv|where name == 'wallabag'
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|select name
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name|$in
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name|echo $in
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name|value
(kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name).value
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name|value
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name
kubectl get pods --all-namespaces|from ssv|where namespace == 'wallabag'|get name|first
kubectl get pods --all-namespaces|detect columns
exit
ruby -v
rbenv
go --version
go version
exit
$nul.config-path
$nu.config-path
$nu.data-dir
mkdir ($nu.data-dir | path join "vendor/autoload")<\n>starship init nu | save -f ($nu.data-dir | path join "vendor/autoload/starship.nu")
exirt
exit
ls
mkdir -p ~/.config && touch ~/.config/starship.toml
exit
$env
$env|table -e
mkdir ~/.config/atuin/extensions
atuin init nu | save ~/.config/atuin/extensions/atuin.nu
ls
exit
nu
atuin sync
ls
cd code/dotfiles/
cd
atuin status
atuin stats
exit
nu
atuin stats
tmux
exit
nu
exit
nu
exit
exir
exit
nu config
config nu
$env.EDITOR=nvim
$env.EDITOR = nvim
$env.EDITOR = "nvim"
config nu
$env.XDG_CONFIG_DIRS
$env.XDG_CONFIG_HOME
$env.NU_LIB_DIRS
$nu.data-dir
$env.XDG_CONFIG_HOME
n
$nu.data-dir
ls ~/.local/share/nushell/
ls ~/.local/share/nushell/vendor/
ls ~/.local/share/nushell/vendor/autoload/
exit
$env.ATUIN_NOBIND = true<\n>atuin init nu | save -f ~/.local/share/atuin/init.nu #make sure you created the directory beforehand with `mkdir ~/.local/share/atuin/init.nu`<\n>source ~/.local/share/atuin/init.nu<\n><\n>#bind to ctrl-r in emacs, vi_normal and vi_insert modes, add any other bindings you want here too<\n>$env.config = (<\n>    $env.config | upsert keybindings (<\n>        $env.config.keybindings<\n>        | append {<\n>            name: atuin<\n>            modifier: control<\n>            keycode: char_r<\n>            mode: [emacs, vi_normal, vi_insert]<\n>            event: { send: executehostcommand cmd: (_atuin_search_cmd) }<\n>        }<\n>    )<\n>)
mkdir ~/.local/share/atuin/init.nu
$env.ATUIN_NOBIND = true<\n>atuin init nu | save -f ~/.local/share/atuin/init.nu #make sure you created the directory beforehand with `mkdir ~/.local/share/atuin/init.nu`<\n>source ~/.local/share/atuin/init.nu<\n><\n>#bind to ctrl-r in emacs, vi_normal and vi_insert modes, add any other bindings you want here too<\n>$env.config = (<\n>    $env.config | upsert keybindings (<\n>        $env.config.keybindings<\n>        | append {<\n>            name: atuin<\n>            modifier: control<\n>            keycode: char_r<\n>            mode: [emacs, vi_normal, vi_insert]<\n>            event: { send: executehostcommand cmd: (_atuin_search_cmd) }<\n>        }<\n>    )<\n>)
exit
tns
exit
ls
ls -la
config nu --doc | nu-highlight | less -R
exit
tns
ls
rbenv
go version
$env.XDG_CONFIG_DIRS
$env.XDG_DATA_DIRS
$env.NU_LIB_DIRS
$env.data-dir
$nu.data-dir
$nu.env-path
$nu.user-autoload-dirs
$env.XDG_DATA_HOME
t
exit
nu
exit
g
t
exit
exit
alias t = tmux
alias t = "tmux"
alias a = "tmux"
exit
tns
alias tns = tns
tns
exit
tns
exit
ls
exit
ls ~/.local/share/atuin/
ls ~/.local/share/atuin/init.nu/
cat ~/.local/share/atuin/init.nu/
cd ~/.local/share/atuin/init.nu/
cd ..
ls
ls init.nu/
rm init.nu/
atuin init nu | save ~/.local/share/atuin/init.nu<\n>
cat init.nu
exit
ls
notify teste oi!!!
{a: 1}
http post
atuin init nu --disable-up-arrow | save ~/.local/share/atuin/init.nu<\n>
rm home/roadhouse/.local/share/atuin/init.nu
atuin init nu --disable-up-arrow | save ~/.local/share/atuin/init.nu
atuin init nu --disable-up-arrow | save -f ~/.local/share/atuin/init.nu
exit
notify teste oi!!!
post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 {}
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 ""
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 "a:1"
{a:1}|to json|http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 $in
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 {}
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 {a:1}
notify teste oi!!!
exit
notify teste oi!!!
exit
notify tfulero
exit
notify tfulero
notify a asd asd
env
exit
notify last
echo "a"
echo "a"|html_unescape
echo "a%20"|html_unescape
echo "a%20nasd"|html_unescape
echo "a%20nasd"
exit
notify verylast
exit
notify verylast
http post --help
exit
notify verylast2
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 {a:1}
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 ({a:1}).to_string
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 ({a:1}).value
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 ({a:1}).string
http post https://webhook.site/1f0f84ab-fce5-40cd-a4a7-58e59f8f7f44 {a:1}
urlgrok
urlngrok
exit
ls
exit
urlngrok
exit
$nu
$nu|explore --pek
$nu|explore --peek
$nu | explore --peek
exit
